<?xml version="1.0" encoding="utf-8"?>
<test-results date="2018-10-19" name="Expecto.Tests" total="4" errors="1" failures="0" ignored="0" not-run="0" inconclusive="0" skipped="0" invalid="0" time="11:26:57">
  <environment expecto-version="8.4.2" clr-version="4.0.30319.42000" os-version="Microsoft Windows NT 6.2.9200.0" platform="Linux" cwd="C:\Repositories\FisherSMPD\src\Fisher.Common.Tests" machine-name="DIT299" user="Dominik.Kotecki" user-domain="ROSSPOL" />
  <culture-info current-culture="pl-PL" current-uiculture="pl-PL" />
  <test-suite type="Assembly" name="Expecto.Tests" executed="True" result="Failure" success="False" time="0.357" asserts="0">
    <results>
      <test-case name="Database/load file/Test1" executed="True" result="Failure" success="False" time="0.202" asserts="0">
        <failure>
          <message>Input string was not in a correct format.</message>
          <stack-trace>System.FormatException: Input string was not in a correct format.
   at System.Number.ParseDouble(ReadOnlySpan`1 value, NumberStyles options, NumberFormatInfo numfmt)
   at System.Double.Parse(String s)
   at Fisher.Common.Database.rest@27.Invoke(Match x) in C:\Repositories\FisherSMPD\src\Fisher.Common\Database.fs:line 27
   at Microsoft.FSharp.Collections.Internal.IEnumerator.map@74.DoMoveNext(b&amp; curr)
   at Microsoft.FSharp.Collections.Internal.IEnumerator.MapEnumerator`1.System-Collections-IEnumerator-MoveNext()
   at Microsoft.FSharp.Collections.SeqModule.ToList[T](IEnumerable`1 source)
   at Fisher.Common.Database.|MetaData|FeatureData|Nothing|(String input) in C:\Repositories\FisherSMPD\src\Fisher.Common\Database.fs:line 27
   at Fisher.Common.Database.result@37.Invoke(State acc, String x) in C:\Repositories\FisherSMPD\src\Fisher.Common\Database.fs:line 37
   at Microsoft.FSharp.Collections.SeqModule.Fold[T,TState](FSharpFunc`2 folder, TState state, IEnumerable`1 source)
   at Fisher.Common.Database.read@36-2.Invoke(String _arg2) in C:\Repositories\FisherSMPD\src\Fisher.Common\Database.fs:line 37
   at Microsoft.FSharp.Control.AsyncPrimitives.CallThenInvokeNoHijackCheck[a,b](AsyncActivation`1 ctxt, FSharpFunc`2 userCode, b result1)
   at Microsoft.FSharp.Control.Trampoline.Execute(FSharpFunc`2 firstAction)</stack-trace>
        </failure>
      </test-case>
      <test-case name="Probability/getPossibleCombinations/Test combinations" executed="True" result="Success" success="True" time="0.045" asserts="0" />
      <test-case name="Fisher/average vector/Test1" executed="True" result="Success" success="True" time="0.100" asserts="0" />
      <test-case name="Fisher/S/sa" executed="True" result="Success" success="True" time="0.109" asserts="0" />
    </results>
  </test-suite>
</test-results>